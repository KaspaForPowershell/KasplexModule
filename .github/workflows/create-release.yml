name: Auto Release with Version Bump

on:
  workflow_dispatch:  # Manual trigger

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed to get all tags

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Get latest tag
      id: get_tag
      run: |
        latest_tag=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
        if [ -z "$latest_tag" ]; then
          latest_tag="v0.0.0"
        fi
        echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

    - name: Bump version
      id: bump
      run: |
        version="${{ steps.get_tag.outputs.latest_tag }}"
        version="${version#v}"  # Strip the "v"
        IFS='.' read -r major minor patch <<<"$version"
        patch=$((patch + 1))
        new_tag="v$major.$minor.$patch"
        echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

    - name: Create Git tag
      env:
        GH_TOKEN: ${{ secrets.PUBLIC_PAT }}
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git tag ${{ steps.bump.outputs.new_tag }}
        git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}
        git push origin ${{ steps.bump.outputs.new_tag }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release

    - name: Publish
      run: dotnet publish -c Release -o publish

    - name: Zip published files
      run: zip -r release.zip publish

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.bump.outputs.new_tag }}
        name: Release ${{ steps.bump.outputs.new_tag }}
        files: release.zip
      env:
        GITHUB_TOKEN: ${{ secrets.PUBLIC_PAT }}  # use your PAT here
